let gql,createRepository;_7eb‍.x([["typeDefs",()=>typeDefs],["resolvers",()=>resolvers]]);_7eb‍.w("apollo-server-express",[["gql",["gql"],function(v){gql=v}]]);_7eb‍.w("../../io/Database/createRepository",[["default",["createRepository"],function(v){createRepository=v}]]);


const clientRepository = createRepository('client');

       const typeDefs = gql `
    type Client implements Node {
        id: ID!
        name: String!
        email: String!
        disabled: Boolean!
    }

    type ClientList implements List {
        items: [Client!]!
        totalItems: []
    }

    extend type Query {
        client(id: ID!): Client
        clients: [Client!]
    }
`;

       const resolvers = {
    Query:{
        client: async(_, { id }) => {
            const clients = await clientRepository.read();
            return clients.find((client) => client.id === id);
        },
        clients: async() => {
            const clients = await clientRepository.read();
            return clients || [];
        }
    },
};